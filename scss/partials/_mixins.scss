

@mixin font-weight($name) {
     $weights: ( 
        thin     : 100,
        light    : 300,
        reg      : 400,
        med      : 500,
        semi-bold: 600,
        bold     : 700,
        ex-bold  :800,
        black    : 900,
    );


    $output: $name;

    @if map-has-key($weights, $name) {
        $output: map-get($weights, $name);
    };

    font-weight: $output;
}



@mixin font($family: null,  $size: px-to-rem(18), $weight: null ) {
    font-family: $family!important;
    @if $size {
        font-size:  $size;
    }

    @include font-weight($weight);
}

@mixin anchor-colour ($dark: null) {
       @if $dark == false {
            color: $primary-colour;
            text-decoration: none!important;
            &:hover {
                color: $primary-dark!important;
            }
        } @else {
            color: $secondary-med;
            text-decoration: none;
            &:hover {
                color: $secondary-dark;
            }
        }
}

//fluid font size 

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {

      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }

      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

